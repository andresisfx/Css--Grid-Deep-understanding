:root {
    --azul: #0071b7;
    --blanco: #FFF;
    --naranja: #ff4f1e;
}
html {
    font-size: 62.5%; /** 1REM = 10pX **/
}

body {
    background-color: var(--azul);
    font-family:  'Lato', sans-serif;
    font-size: 1.6rem;
}

.caja-curso {
    background-color: var(--naranja);
    text-align: center;
    color: var(--blanco);
    padding: 5rem;

}
.caja-curso h1 {
    margin: 0;
}
.caja-curso p {
    font-size: 2.4rem;
}
.caja-curso a {
    font-size: 2.4rem;
    padding: 2rem;
    display: inline-block;
    text-decoration: none;
    color: var(--blanco);
    padding: 0;
}


h1, h2 {
    color: var(--blanco);
    text-align: center;
    margin: 5rem 0;
}

.contenedor {
    max-width: 120rem;
    margin: 0 auto;
}
.box {
    background-color: var(--naranja);
    color: var(--blanco);
    padding: 5rem;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 4rem;
    margin-bottom: 2rem;
}

/*!  1*/
.grid-1{
    display: grid;
    grid-template-columns: repeat(1, 1fr);
    gap: 2rem;
}
.grid-1{
    display: grid;
    grid-template-columns: repeat(1, 1fr);
    gap: 2rem;
}

/*!  2 */
.grid-2{
    display: grid;
    grid-template-columns:300px 300px 300px; 
    gap: 2rem;
}
.grid-2 .box:nth-child(2){
  grid-column-start: 3;
  grid-column-end: 4;
  grid-column: 3 / 4;/**esta linea reemplazalas dos de arriba*/

}

/*! 3 */
.grid-3{
    display: grid;
    grid-template-rows: repeat(2, 200px);
    grid-template-columns: repeat(3, 300px); 

    gap: 2rem;
}
.grid-3 .box:nth-child(2){
  grid-row-start: 2;
  grid-row-end: 4;
  grid-row: 1 / 2;/**esta linea reemplazalas dos de arriba*/
}

/*! 4 span*/
.grid-4{
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(4, 200px);
    gap: 2rem;
}
.grid-4 .box:nth-child(2){
    background-color: greenyellow;
    grid-column: 2/ span 4;
    grid-row: 1/ span 3; 
}

/*! 5 Shorthand (atajo)*/
.grid-5{
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(4, 200px);
    grid: repeat(2, 300px) / repeat(3, 300px);/** Atajo: esta linea reemplaza las dos de arriba*/
    gap: 2rem;
}

/*! 6 auto.flow*/

.grid-6{
    display: grid;
    grid: repeat(3, 200px) / repeat(3, 300px);
    grid-auto-flow:row dense;/** grid dense hace que los elementos se acomoden en el grid lo mejor posible, tabien se puede usar row o column o column dense o row dense */
    gap: 2rem;
}
.grid-6 .box:nth-child(2){
    grid-column: 1/2;
}

/*! 7 grid areas*/
.grid-7{
    display: grid;
    grid:2fr repeat(2, 1fr) /2fr repeat(2, 1fr);/** debemos tener en cuenta que el los rows siempre debemos darle una altura , ya que si le colocamos fr, no tiene una referencia de qué dividir, en columns si oirque toma el ancho del contenido*/
    gap: 2rem;
}

/*! 8 GAP*/

.grid-8 {
    display: grid; 
    grid: repeat(3, 1fr) /repeat(3, 1fr);
    column-gap: 2rem;
    row-gap: 4rem;
    gap: 4rem / 2rem;
}

/*! 9 grid template areas*/
.grid-9 {
    display: grid;
    height: 120rem;
    grid-template-areas:
        "header header header"
        "nav nav nav"
        "contenido contenido sidebar"
        "footer footer footer";
    grid-template-columns: 1fr 1fr 1fr;
    grid-template-rows: 2.5fr 1fr 6fr 2.5fr;
    gap: 2rem;
}
.grid-9 .box{
    margin-bottom: 0;
}
.grid-9 .box:nth-child(1){
    grid-area: header;
}
.grid-9 .box:nth-child(2){
    grid-area: nav;
}
.grid-9 .box:nth-child(3){
    grid-area: contenido;
}
.grid-9 .box:nth-child(4){
    grid-area: sidebar;
}
.grid-9 .box:nth-child(5){
    grid-area: footer;
}

/*! 10 grid template SHORTHAND*/
/*? Esta es una forma abreviada de definir las áreas del grid, en lugar de usar grid-template-areas, usamos grid-template y definimos las filas y columnas en una sola línea. */
.grid-10 {
    display: grid;
    height: 120rem;
    grid-template: 
        "header header header" 2.5fr /** de una vez definimos el tamaño en altura de las filas, si no lo hacemos, toma el alto del contenido */
        "nav nav nav" 1fr
        "contenido contenido sidebar" 6fr
        "footer footer footer" 2.5fr / 1fr 1fr 1fr;/** estas ultimas son las columnas, si no las colocamos, toma el ancho del contenido */
    gap: 2rem;
}
.grid-10 .box{
    margin-bottom: 0;
}
.grid-10 .box:nth-child(1){
    grid-area: header;
}
.grid-10 .box:nth-child(2){
    grid-area: nav;
}
.grid-10 .box:nth-child(3){
    grid-area: contenido;
}
.grid-10 .box:nth-child(4){
    grid-area: sidebar;
}
.grid-10 .box:nth-child(5){
    grid-area: footer;
}

/*!11 alneacion con grid*/
.grid-11 {
    display: grid;
   grid-template-columns: repeat(6,1fr);
   height: 300px;
   align-items: center; /** alinea los items en el centro verticalmente */
    /*!NO se puede utilizar justify content ya que no es flexbox/*/
 

}   
